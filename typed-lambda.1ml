module typed_lambda

type Type = sig
  type t a;

  Int : t (type int);
  Arrow a b : t a -> t b -> t (type (a ~> b));
end;

type TQ a = (T : Type) -> T.t a;

type Term = sig
  type t;
  type ty;

  Int : int -> t;
  Abs : ty -> t -> t;
  App : t -> t -> t;
end;
